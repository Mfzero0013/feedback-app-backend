generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS
enum Cargo {
  COLABORADOR
  GESTOR
  ADMINISTRADOR
}

enum UserStatus {
  ATIVO
  INATIVO
}

enum FeedbackStatus {
  ABERTO
  EM_ANALISE
  CONCLUIDO
  ARQUIVADO
}

enum ReportType {
  FEEDBACK_SUMMARY
  USER_ENGAGEMENT
}

// MODELS
model User {
  id                   String     @id @default(uuid())
  nome                 String
  email                String     @unique
  senha                String
  cargo                Cargo      @default(COLABORADOR)
  jobTitle             String?
  equipeId             String?
  foto                 String?    @db.Text
  telefone             String?
  dataAdmissao         DateTime?  @db.Date
  status               UserStatus @default(ATIVO)
  resetPasswordToken   String?    @unique
  resetPasswordExpires DateTime?

  // Relação: O usuário pertence a uma equipe
  equipe           Equipe? @relation("MembrosDaEquipe", fields: [equipeId], references: [id])
  // Relação: O usuário gerencia uma equipe
  equipeGerenciada Equipe? @relation("GestorDaEquipe")

  feedbacksCriados   Feedback[] @relation("CriadosPeloUsuario")
  feedbacksRecebidos Feedback[] @relation("RecebidosPeloUsuario")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Equipe {
  id        String  @id @default(uuid())
  status    String  @default("PENDENTE")
  nome      String  @unique
  descricao String?
  gestorId  String? @unique

  // Relação: A equipe tem um gestor (usuário)
  gestor    User?      @relation("GestorDaEquipe", fields: [gestorId], references: [id])
  // Relação: A equipe tem muitos membros (usuários)
  membros   User[]     @relation("MembrosDaEquipe")
  feedbacks Feedback[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feedback {
  id          String         @id @default(uuid())
  titulo      String
  descricao   String         @db.Text
  observacao  String?        @db.Text
  tipo        String
  status      FeedbackStatus @default(ABERTO)
  isAnonymous Boolean        @default(false)
  nota        Int?
  equipeId    String?

  autorId    String?
  avaliadoId String

  equipe   Equipe? @relation(fields: [equipeId], references: [id])
  autor    User?   @relation("CriadosPeloUsuario", fields: [autorId], references: [id])
  avaliado User    @relation("RecebidosPeloUsuario", fields: [avaliadoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id          String     @id @default(uuid())
  type        ReportType
  generatedBy String
  data        Json
  startDate   DateTime
  endDate     DateTime

  createdAt DateTime @default(now())
}

model SystemSettings {
  id    String @id @default(uuid())
  key   String @unique
  value Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
